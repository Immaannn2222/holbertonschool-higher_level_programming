The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

Import:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
matrix = [
    [1, 2, 3],
    [4, 5, 6]
]

     >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided(matrix, 'a')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(None, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    ['kl',8, 13],
    ...    10, -5, 206]
    ... ]

    >>> matrix_divided(matrix, 11)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6, 100]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix, )
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 arguments

     >>> matrix_divided([[]], 2)
      [[]]
